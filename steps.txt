Check for any syntax errors.

Allocate memory for shared object "share".

Initialize shared memory value.

Try to open the input file.

Check if the file is open.
    Exit if any error is detected (file not found, etc.).

Capture the number of producers and consumers, set to 1 if unspecified.

Set the shared object's file pointer to point at the input file.

Set the shared object's line buffer to null.

Initiate the shared object's mutex lock.

Create producers as many as the specified number ("Nprod")
    Lock shared object.
    Start a loop:
        Read a line and store in the shared object's line buffer.
        If the end of file is reached or an error occurs:
            Set the shared object's "full" indicator to 1.
            Set the shared object's line buffer to null.
            Break out of the loop.
        Set the shared object's number of lines count to i.
        Duplicate the current line to the shared object's line buffer.
        Send a signal to the consumer that the line buffer is ready.
        Wait for a signal from the consumer that they are done.
        Increment i.
        Set the shared object's "full" indicator to 1.
    Unlock the shared object.
    Free the memory space allocated for the local line buffer.
    Print the number of lines read by the current producer.
    Set the return value to i.
    Terminate the thread with "ret" as the return value.
    

Create consumers as many as the specified number ("Ncons")
    Lock shared object.
    Start a loop:
        Wait for a signal from the consumer that the line buffer is ready.
        Set the local line buffer to the shared object's line buffer.
        If the local line buffer is null, break the loop.
        Measure the length of the local line buffer.
        Print the consumer ID, current line, number of lines, and the content of the current line.
        Send a signal to the producer that processing is finished.
        Free the memory space allocated for the shared object's line buffer.
        Increment i.
        Reset the shared object's "full" indicator to 0.
    Unlock the shared object.
    Print the number of lines processed by the consumer.
    Set the return value to i.
    Terminate the thread with "ret" as the return as the return value.

Print "main continuing"

Wait for all consumer threads to finish and collect the return values in "ret".

Print consumer details.

Wait for all producer threads to finish and collect the return values in "ret".

Print producer details.

Terminate the thread.

Exit the program.
